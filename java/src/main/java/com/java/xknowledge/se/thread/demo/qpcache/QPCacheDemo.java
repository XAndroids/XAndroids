package com.java.xknowledge.se.thread.demo.qpcache;

import com.java.xknowledge.se.thread.threadpool.MyThreadFactory;

import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

/**
 * 需求：
 * 开启写子线程完成QP的异步加载并缓存，开启读子线程完成QP获取
 * 如果写子线程没有完成，则读子线程等待，等待写完之后继续执行
 * 如果写子线程完成，则读子线立即执行
 * 方案：wait/notify
 * 运行：
 * 1.读取等待加载线程
 * currentTime = 02:07:17，第 0 Runnable，使用线程pool-1-thread-1开始写入....
 * currentTime = 02:07:17，第 1 Runnable，使用线程pool-1-thread-2开始写入....
 * currentTime = 02:07:17，第 2 Runnable，使用线程pool-1-thread-3开始写入....
 * currentTime = 02:07:17，第 0 Runnable，使用线程pool-1-thread-4开始读取....
 * currentTime = 02:07:17，pool-1-thread-4读取wait()....
 * currentTime = 02:07:17，第 1 Runnable，使用线程pool-1-thread-5开始读取....
 * currentTime = 02:07:17，pool-1-thread-5读取wait()....
 * currentTime = 02:07:17，第 2 Runnable，使用线程pool-1-thread-6开始读取....
 * currentTime = 02:07:17，pool-1-thread-6读取wait()....
 * currentTime = 02:07:20，pool-1-thread-1写入完成....
 * currentTime = 02:07:20，pool-1-thread-3写入完成....
 * currentTime = 02:07:20，第 0 Runnable，使用线程pool-1-thread-1写入完毕----0QPString
 * currentTime = 02:07:20，pool-1-thread-2写入完成....
 * currentTime = 02:07:20，pool-1-thread-6读取唤醒....
 * currentTime = 02:07:20，pool-1-thread-5读取唤醒....
 * currentTime = 02:07:20，第 2 Runnable，使用线程pool-1-thread-3写入完毕----2QPString
 * currentTime = 02:07:20，pool-1-thread-4读取唤醒....
 * currentTime = 02:07:20，第 1 Runnable，使用线程pool-1-thread-5读取完毕----1QPString
 * currentTime = 02:07:20，第 1 Runnable，使用线程pool-1-thread-2写入完毕----1QPString
 * currentTime = 02:07:20，第 2 Runnable，使用线程pool-1-thread-6读取完毕----2QPString
 * currentTime = 02:07:20，第 0 Runnable，使用线程pool-1-thread-4读取完毕----0QPString
 * 2.写入完成后，再读取
 * currentTime = 02:09:30，第 0 Runnable，使用线程pool-1-thread-1开始写入....
 * currentTime = 02:09:30，第 1 Runnable，使用线程pool-1-thread-2开始写入....
 * currentTime = 02:09:30，第 2 Runnable，使用线程pool-1-thread-3开始写入....
 * currentTime = 02:09:33，pool-1-thread-1写入完成....
 * currentTime = 02:09:33，pool-1-thread-2写入完成....
 * currentTime = 02:09:33，pool-1-thread-3写入完成....
 * currentTime = 02:09:33，第 1 Runnable，使用线程pool-1-thread-2写入完毕----1QPString
 * currentTime = 02:09:33，第 0 Runnable，使用线程pool-1-thread-1写入完毕----0QPString
 * currentTime = 02:09:33，第 2 Runnable，使用线程pool-1-thread-3写入完毕----2QPString
 * currentTime = 02:09:36，第 0 Runnable，使用线程pool-1-thread-1开始读取....
 * currentTime = 02:09:36，第 2 Runnable，使用线程pool-1-thread-2开始读取....
 * currentTime = 02:09:36，第 1 Runnable，使用线程pool-1-thread-3开始读取....
 * currentTime = 02:09:36，第 2 Runnable，使用线程pool-1-thread-2读取完毕----2QPString
 * currentTime = 02:09:36，第 0 Runnable，使用线程pool-1-thread-1读取完毕----0QPString
 * currentTime = 02:09:36，第 1 Runnable，使用线程pool-1-thread-3读取完毕----1QPString
 */
class QPCacheDemo {

    public static void main(String[] args) throws InterruptedException {
        ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(0,
                Integer.MAX_VALUE, 10L, TimeUnit.SECONDS, new SynchronousQueue<>(), new MyThreadFactory());

        for (int i = 0; i < 30; i++) {
            threadPoolExecutor.execute(new QPLoadRunnable(i));
        }

//        Thread.sleep(6000);

        for (int i = 0; i < 30; i++) {
            threadPoolExecutor.execute(new QPReadRunnable(i));
        }
    }
}
